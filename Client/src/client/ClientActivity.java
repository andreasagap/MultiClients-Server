/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Andreas Agapitos
 */
public class ClientActivity extends javax.swing.JFrame {

    /**
     * Creates new form ClientActivity
     */
    private Socket clientSocket=null; 
    private  PrintWriter out=null;
    private final ClientActivity a=this;
    private  BufferedReader inFromServer=null;
    public ClientActivity() {
        initComponents();
    }
    public void setPass(String ip,int port) {
        try {
            clientSocket = new Socket(ip,port);
            out = new PrintWriter(clientSocket.getOutputStream(), true);
            inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
        } catch (IOException ex) {
            this.setVisible(false);
        }
        this.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    out.println("Exit");
                    try {
                        inFromServer.close();
                        out.close();
                        clientSocket.close();
                    } catch (IOException ex) {
                        Logger.getLogger(ClientActivity.class.getName()).log(Level.SEVERE, null, ex);
                    }
                        System.exit(0);
                    
                }
            });
        newemail.setEnabled(false);
        logout.setEnabled(false);
        refresh.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        List = new javax.swing.JList<>();
        newemail = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListMouseClicked(evt);
            }
        });
        List.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(List);

        newemail.setText("New Email");
        newemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newemailActionPerformed(evt);
            }
        });

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Login", "Sign Up" }));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Password");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Username");

        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newemail)
                            .addComponent(refresh)
                            .addComponent(logout))
                        .addGap(766, 766, 766)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newemail)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(logout)))
                .addGap(25, 25, 25)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Login"))
        {
            out.println("login");
            try {
                out.println(username.getText());
                out.println(password.getText());
                if(inFromServer.readLine().equalsIgnoreCase("Wrong"))
                {
                    JOptionPane.showMessageDialog(null, "Wrong username or password");
                }
                else{
                    JOptionPane.showMessageDialog(null, "Welcome "+username.getText());
                    newemail.setEnabled(true);
                    logout.setEnabled(true);
                    refresh.setEnabled(true);
                    jComboBox1.setEnabled(false);
                    username.setEnabled(false);
                    password.setEnabled(false);
                    jButton1.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(ClientActivity.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            out.println("signin");
            try {
                out.println(username.getText());
                out.println(password.getPassword().toString());
                if(inFromServer.readLine().equalsIgnoreCase("Wrong"))
                {
                    JOptionPane.showMessageDialog(null, "This username exist - Please choose again");
                }
                else{
                    JOptionPane.showMessageDialog(null, "Welcome "+username.getText());
                    newemail.setEnabled(true);
                    logout.setEnabled(true);
                    refresh.setEnabled(true);
                    jComboBox1.setEnabled(false);
                    username.setEnabled(false);
                    password.setEnabled(false);
                    jButton1.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(ClientActivity.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void newemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newemailActionPerformed
       out.println("newemail");
        Email e=new Email();
        
       e.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        e.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    a.setEnabled(true);
                }
            });
       e.setEmail(out,inFromServer,a);
       e.setVisible(true);
       this.setEnabled(false);
    }//GEN-LAST:event_newemailActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        DefaultListModel<String> model = new DefaultListModel<>();        
        try {
            out.println("showemails");
            int n=inFromServer.read();
            for(int i=0;i<n;i++)
            {
                model.addElement(inFromServer.readLine());
            }
            List.setModel(model);
            List.setSelectedIndex(0);
        } catch (IOException ex) {
            Logger.getLogger(ClientActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshActionPerformed

    private void ListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ListKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE)
        {
            out.println("deleteemail");
            DefaultListModel model = (DefaultListModel) List.getModel();
            int selectedIndex = List.getSelectedIndex();
            int ID=Integer.parseInt(List.getSelectedValue().split(" ", 2)[0]);
            out.println(ID);
            if (selectedIndex != -1) {
                model.remove(selectedIndex);
            }
            List.setModel(model);
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try {
                out.println("reademail");
                DefaultListModel model = (DefaultListModel) List.getModel();
                int ID=Integer.parseInt(List.getSelectedValue().split(" ", 2)[0]);
                out.println(ID);
                String s=inFromServer.readLine();
                String su=inFromServer.readLine();
                String m=inFromServer.readLine();
                Email e=new Email();
                e.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                e.setPass(s,su,m);
                e.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(ClientActivity.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
  
        
        
    }//GEN-LAST:event_ListKeyPressed

    private void ListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ListMouseClicked

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        out.println("logout");
        newemail.setEnabled(false);
        logout.setEnabled(false);
        refresh.setEnabled(false);
        jComboBox1.setEnabled(true);
                    username.setEnabled(true);
                    password.setEnabled(true);
                    jButton1.setEnabled(true);
        
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> List;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JButton newemail;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
